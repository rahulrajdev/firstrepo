{"version":3,"sources":["../../classhomework/React-Memory-Game/memorygame/src/components/BodyWrapper/BodyWrapper.js","../../classhomework/React-Memory-Game/memorygame/src/components/CharacterWrapper/CharacterWrapper.js","../../classhomework/React-Memory-Game/memorygame/src/components/Score/Score.js","../../classhomework/React-Memory-Game/memorygame/src/components/Status/Status.js","../../classhomework/React-Memory-Game/memorygame/src/components/Navbar/Navbar.js","../../classhomework/React-Memory-Game/memorygame/src/components/Jumbotron/Jumbotron.js","../../classhomework/React-Memory-Game/memorygame/src/components/CharacterCard/CharacterCard.js","../../classhomework/React-Memory-Game/memorygame/src/App.js","../../classhomework/React-Memory-Game/memorygame/src/index.js"],"names":["BodyWrapper","props","react_default","a","createElement","className","children","CharacterWrapper","Score","this","currentScore","highestScore","Component","Status","state","status","Navbar","components_Status_Status","components_Score_Score","Jumbotron","CharacterCard","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClickEvent","clicked","console","log","setState","handleData","bind","assertThisInitialized","src","image","alt","concat","name","onClick","App","characters","_this2","Navbar_Navbar","components_Jumbotron_Jumbotron","BodyWrapper_BodyWrapper","CharacterWrapper_CharacterWrapper","map","character","components_CharacterCard_CharacterCard","id","key","ReactDOM","render","src_App","document","getElementById"],"mappings":"goDAOeA,MAJf,SAAqBC,GACjB,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeJ,EAAMK,iBCIhCC,MALf,SAA0BN,GACtB,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBJ,EAAMK,WCSrCE,mLANP,OACIN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,kBAA0CI,KAAKR,MAAMS,aAArD,oBAAoFD,KAAKR,MAAMU,qBANvFC,aCaLC,6MAXXC,MAAQ,CACJC,OAAQ,2FAIR,OACIb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYI,KAAKK,MAAMC,eAR7BH,mBCiBNI,MAbf,SAAiBf,GACb,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,4BACAH,EAAAC,EAAAC,cAACa,EAAD,MACAf,EAAAC,EAAAC,cAACc,EAAUjB,KCMRkB,0LAZP,OACIjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,gBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,iIALQO,qBCyCTQ,qBArCX,SAAAA,EAAYnB,GAAO,IAAAoB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAb,KAAAW,IACfC,EAAAC,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAjB,KAAMR,KAQV0B,iBAAmB,WACVN,EAAKP,MAAMc,QAUZC,QAAQC,IAAI,kBARZT,EAAKU,SAAS,CACZH,SAAS,IAGXC,QAAQC,IAAI,iBAOhBT,EAAKpB,MAAM+B,cArBXX,EAAKP,MAAQ,CACTc,SAAS,GAEbP,EAAKM,iBAAmBN,EAAKM,iBAAiBM,KAAtBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KALTA,wEA6Bf,OACInB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAS8B,IAAK1B,KAAKR,MAAMmC,MAAOC,IAAG,GAAAC,OAAK7B,KAAKR,MAAMsC,KAAhB,WAA+BC,QAAS/B,KAAKkB,2BAjCnFf,qBC+Db6B,6MA1Db3B,MAAQ,CACN4B,aACAhC,aAAc,EACdC,aAAc,EACdI,OAAQ,qBAGViB,WAAa,WACTX,EAAKU,SAAS,CACZrB,aAAcW,EAAKP,MAAMJ,aAAe,6EAuBpC,IAAAiC,EAAAlC,KACR,OACEP,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAACwC,EAAD,CAAQlC,aAAcD,KAAKK,MAAMJ,aAAcC,aAAcF,KAAKK,MAAMH,eACxET,EAAAC,EAAAC,cAACyC,EAAD,MACA3C,EAAAC,EAAAC,cAAC0C,EAAD,KACE5C,EAAAC,EAAAC,cAAC2C,EAAD,KACGtC,KAAKK,MAAM4B,WAAWM,IAAI,SAAAC,GAAS,OAClC/C,EAAAC,EAAAC,cAAC8C,EAAD,CACAC,GAAIF,EAAUE,GACdC,IAAKH,EAAUE,GACfZ,KAAMU,EAAUV,KAChBH,MAAOa,EAAUb,MACjBJ,WAAYW,EAAKX,yBAhDbpB,aCJlByC,IAASC,OAAOpD,EAAAC,EAAAC,cAACmD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.a1d9347e.chunk.js","sourcesContent":["import React from 'react';\nimport './body-wrapper.css';\n\nfunction BodyWrapper(props) {\n    return <div className='BodyWrapper'>{props.children}</div>;\n  }\n  \nexport default BodyWrapper;\n  \n\n\n","import React from 'react';\nimport \"./character-wrapper.css\";\n\nfunction CharacterWrapper(props) {\n    return <div className='CharacterWrapper'>{props.children}</div>;\n    \n}\n\nexport default CharacterWrapper;","import React, { Component } from 'react';\n\nclass Score extends Component {\n\n    \n\n    render() {\n        return (\n            <div className=\"nav-item\">Current Score: {this.props.currentScore} | Highest Score {this.props.highestScore}</div>\n        )\n    }\n}\n\nexport default Score;\n","import React, { Component } from 'react';\n\nclass Status extends Component {\n\n    state = {\n        status: \"Click to begin!\"\n    }\n\n    render() {\n        return (\n            <div className=\"nav-item\">{this.state.status}</div>\n        )\n    }\n}\n\nexport default Status;\n","import React from 'react';\nimport Score from \"../Score/Score\";\nimport Status from \"../Status/Status\";\nimport './navbar.css';\n\n\nfunction Navbar (props) {\n    return (\n        <nav>\n            <div className=\"nav-item\">Harry Potter Memory Game</div>\n            <Status />\n            <Score {...props}/>\n        </nav>\n\n    )   \n}\n\n\n\nexport default Navbar;","import React, { Component } from 'react';\nimport './jumbotron.css';\n\nclass Jumbotron extends Component {\n    render() {\n        return (\n            <div className=\"jumbotron\">\n                <div className=\"header\">Clicky Game!</div>\n                <div className=\"instructions\">Click an image to earn points! \n                But be careful, if you click one you already have before, you lose! \n                Remember wisely :)\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Jumbotron;","import React, { Component } from 'react';\n\nimport \"./character-card.css\";\n\n\nclass CharacterCard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            clicked: false\n        }\n        this.handleClickEvent = this.handleClickEvent.bind(this) \n\n    }\n\n    handleClickEvent = () => {\n        if (!this.state.clicked) {\n      \n            this.setState({\n              clicked: true\n            });\n      \n            console.log(\"this is true\");\n    \n        } else {\n\n            console.log(\"this is false\");\n      \n        }\n        this.props.handleData();\n    }\n\n   \n\n    render() {\n        return (\n            <div>\n                <img className='avatar' src={this.props.image} alt={`${this.props.name} avatar`} onClick={this.handleClickEvent} />\n            </div>\n        )\n    }\n}\n\nexport default CharacterCard;\n\n\n\n","import React, { Component } from 'react';\nimport BodyWrapper from './components/BodyWrapper/BodyWrapper';\nimport CharacterWrapper from './components/CharacterWrapper/CharacterWrapper';\nimport Navbar from './components/Navbar/Navbar.js';\nimport Jumbotron from './components/Jumbotron/Jumbotron.js'\nimport CharacterCard from './components/CharacterCard/CharacterCard.js';\nimport characters from './characters.json';\n\nclass App extends Component {\n\n  state = {\n    characters,\n    currentScore: 0,\n    highestScore: 0,\n    status: \"Click to begin!\"\n  }\n\n  handleData = () => {\n      this.setState({\n        currentScore: this.state.currentScore + 1\n    });\n\n}\n\n  // increaseScore = () => {\n    \n  //   this.setState({\n  //     currentScore: this.state.currentScore + 1,\n  //     status: \"Great job! Try another!\"\n  //   });\n\n  //   if (this.state.highestScore < this.state.currentScore) {\n  //     this.setState({\n  //       highestScore: this.state.currentScore\n  //     })\n  //   }\n\n  // }\n\n\n\n\n  render () {\n    return (\n      <div>\n\n        <Navbar currentScore={this.state.currentScore} highestScore={this.state.highestScore} />\n        <Jumbotron />\n        <BodyWrapper> \n          <CharacterWrapper>\n            {this.state.characters.map(character => (\n              <CharacterCard \n              id={character.id}\n              key={character.id}\n              name={character.name} \n              image={character.image}\n              handleData={this.handleData}\n              />\n            ))}\n            </CharacterWrapper>\n        </BodyWrapper>\n        \n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}